<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--两个标准配置  -->
    <!-- 支持springmvc更高级的一些功能，JSR303校验，快捷的ajax...映射动态请求 -->
    <mvc:annotation-driven/>
    <!-- 将springmvc不能处理的请求交给tomcat -->
    <mvc:default-servlet-handler default-servlet-name="default"/>

    <context:component-scan base-package="com.binvi">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <!-- 排除@service注解的类 -->
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>

    <!-- 对模型试图名称的解析，在请求时模型视图名称添加前后缀 -->
    <bean id="viewResolve" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="contentType" value="text/html"/>
        <property name="prefix" value="views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    <!--  配置直接转发的页面，无需经handler方法的处理，直接根据配置的逻辑视图名解析视图
        例如：
        以下配置相当于：
            @requestMaping(value = "/index")
            public String index(){
                //不做任何操作
                return "index";
            }
        带来的问题：如果配置了mvc:view-controller直接解析视图，那么在正常的handler中再返回这个逻辑视图名，就404了
        解决： <mcv:annotation-driven></mcv:annotation-driven>-->

    <!--静态资源的映射 -->
    <mvc:resources mapping="/js/**" location="/resources/js/" />
    <mvc:resources mapping="/css/**" location="/resources/css/" />
    <mvc:resources mapping="/img/**" location="/resources/img/" />

    <!-- 文件上传解析器 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 文件默认编码 -->
        <property name="defaultEncoding" value="UTF-8"></property>
        <!-- 文件上传的最大值5MB，5*1024*1024 -->
        <property name="maxUploadSize" value="5242880"></property>
    </bean>

</beans>
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
	   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<context:property-placeholder location="classpath*:jdbc.properties"/>

	<!-- enable component scanning and autowire (beware that this does not enable mapper scanning!) -->
	<context:component-scan base-package="com.tstar" />

	<!-- dataSource config -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<constructor-arg ref="dataSource"/>
	</bean>

	<!-- enable transaction demarcation with annotations -->
	<tx:annotation-driven />

	<!-- define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--<property name="configLocation" value="classpath*:mybatis.xml" />-->
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.tstar.ac.model, com.tstar.activiti.model, com.tstar.billing.model, com.tstar.callcenter.model, com.tstar.crm.model, com.tstar.ocs.model, com.tstar.portal.model, com.tstar.res.model, com.tstar.sms.model" />
		<property name="mapperLocations" value="classpath*:com/**/mapper/**/*.xml"/>
	</bean>

	<!-- define the SqlSession -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactory"/>
	</bean>

	<!-- scan for mappers and let them be autowired -->
	<mybatis:scan base-package="com.tstar.ac.mapper, com.tstar.callcenter.mapper, com.tstar.billing.mapper, com.tstar.crm.mapper, com.tstar.ocs.mapper, com.tstar.portal.mapper, com.tstar.res.mapper, com.tstar.sms.mapper" />

	<!-- Activiti begin -->
	<!-- 单例json对象 -->
	<bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper"/>

	<!-- 引擎内部提供的UUID生成器，依赖fastxml的java-uuid-generator模块 -->
	<bean id="uuidGenerator" class="org.activiti.engine.impl.persistence.StrongUuidGenerator" />
	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource"/>
		<property name="transactionManager" ref="transactionManager"/>
		<property name="databaseSchemaUpdate" value="true"/>
		<property name="jobExecutorActivate" value="true"/>
		<property name="dbIdentityUsed" value="false"/>
		<property name="activityFontName" value="宋体"/>
		<property name="labelFontName" value="宋体"/>
	</bean>

	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration"/>
	</bean>

	<!-- 7大接口 -->
	<bean id="repositoryService" factory-bean="processEngine" factory-method="getRepositoryService"/>
	<bean id="runtimeService" factory-bean="processEngine" factory-method="getRuntimeService"/>
	<bean id="formService" factory-bean="processEngine" factory-method="getFormService"/>
	<bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService"/>
	<bean id="taskService" factory-bean="processEngine" factory-method="getTaskService"/>
	<bean id="historyService" factory-bean="processEngine" factory-method="getHistoryService"/>
	<bean id="managementService" factory-bean="processEngine" factory-method="getManagementService"/>
	<!-- Activiti end -->

	<!-- import beans from other config file -->
	<import resource="classpath*:spring/spring-dao.xml" />
	<import resource="classpath*:spring/spring-service.xml" />
	<import resource="classpath*:spring/spring-manager.xml" />

</beans>